# Generated by Django 4.2.1 on 2023-06-13 08:57

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import smssender.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SMSReceiver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(choices=[('cn', 'CN'), ('rn', 'RN')], max_length=10)),
                ('criteria', models.CharField(choices=[('a2', 'A2'), ('a3', 'A3'), ('a4', 'A4'), ('a5', 'A5'), ('an', 'Andijan'), ('bh', 'Bukhara'), ('dz', 'Djizzakh'), ('fr', 'Fergana'), ('sr', 'Sirdarya'), ('ks', 'Kashkadarya'), ('nm', 'Namangan'), ('nv', 'Navoi'), ('kr', 'Karakalpakstan'), ('sm', 'Samarkand'), ('ts', 'Tashkent'), ('su', 'Surkhandarya'), ('kh', 'Khorezm')], max_length=20)),
                ('notification', models.CharField(choices=[('internet', 'Internet Incidents'), ('roaming', 'Roaming Incidents'), ('core', 'Core Incidents'), ('power', 'Power Incidents'), ('controller', 'BSC/RNC Incidents'), ('chronic', 'Chronic-Down Sites'), ('hub', 'HUB Sites Incidents'), ('report', 'Report Message')], max_length=30)),
                ('tel_number', models.CharField(max_length=12, validators=[smssender.models.only_int])),
                ('name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SMS receiver',
                'verbose_name_plural': 'SMS receivers',
            },
        ),
        migrations.CreateModel(
            name='SMSlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_addr', models.CharField(choices=[('ncc-rn', 'NCC-RN'), ('ncc-cn', 'NCC-CN')], max_length=10)),
                ('sms_text', models.CharField()),
                ('tel_number_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=12, validators=[smssender.models.only_int]), size=None)),
                ('sent_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SMS log',
                'verbose_name_plural': 'SMS logs',
            },
        ),
        migrations.CreateModel(
            name='AlarmReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('BSC/RNC', 'BSC/RNC'), ('BTS', 'BTS'), ('CORE', 'CORE')], max_length=30, verbose_name='Тип')),
                ('level', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('A3', 'A3'), ('A4', 'A4'), ('A5', 'A5'), ('ПР', 'ПР')], max_length=30, verbose_name='Уровень')),
                ('category', models.CharField(choices=[('Тех проблема', 'Тех проблема'), ('ЭС и Клим', 'ЭС и Клим'), ('ПР', 'ПР'), ('Выясняется', 'Выясняется')], max_length=30, verbose_name='Категория')),
                ('responsible_area', models.CharField(choices=[('Другие ЗО', 'Другие ЗО'), ('Эксплуатация', 'Эксплуатация'), ('Выясняется', 'Выясняется')], max_length=30, verbose_name='Зона ответственности')),
                ('category_for_hub', models.CharField(blank=True, choices=[('AC/DC breaker', 'AC/DC breaker'), ('Bad RX level', 'Bad RX level'), ('High Temp', 'High Temp'), ('Incorrect work', 'Incorrect work'), ('Leased Line', 'Leased Line'), ('Low voltage', 'Low voltage'), ('Power', 'Power'), ('TI_DNO', 'TI_DNO'), ('TI_ESO', 'TI_ESO'), ('TI_MW', 'TI_MW'), ('TI_SAQ', 'TI_SAQ'), ('TI_SDH', 'TI_SDH'), ('Unplanned work', 'Unplanned work'), ('WB', 'WB'), ('Выясняется', 'Выясняется')], default=None, max_length=30, null=True, verbose_name='Категория для БС')),
                ('category_for_core', models.CharField(blank=True, choices=[('Core', 'Core'), ('GPRS', 'GPRS'), ('Roaming', 'Roaming'), ('MPLS', 'MPLS'), ('Power', 'Power'), ('High Temp', 'High Temp')], default=None, max_length=30, null=True, verbose_name='Категория для Core')),
                ('hub_site', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Хаб сайт')),
                ('fg_avb', models.CharField(blank=True, default=None, max_length=2, null=True, verbose_name='Наличие FG')),
                ('mw_link', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='MW линк')),
                ('mw_equipment', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='МW оборудование')),
                ('mw_vendor', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='MW вендор')),
                ('bts_vendor', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='BTS вендор')),
                ('power_off_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Время отключения питания')),
                ('sector_block_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Время блока сектора')),
                ('low_battery_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Время низкого заряда батареи')),
                ('dg_start_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Время начала DG')),
                ('battery_life_time', models.TimeField(blank=True, default=None, null=True, verbose_name='Battery life time')),
                ('chronic_site', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Хроник сайт')),
                ('chronic_hours', models.IntegerField(blank=True, default=None, null=True, verbose_name='Хроник часы')),
                ('problem', models.CharField(verbose_name='Проблема')),
                ('reason', models.CharField(verbose_name='Причина')),
                ('influence', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Влияние')),
                ('effect', models.CharField(choices=[('С влиянием', 'С влиянием'), ('Без влияния', 'Без влияния')], max_length=30, verbose_name='Эффект')),
                ('informed', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Информирован')),
                ('start_time', models.DateTimeField(verbose_name='Начало')),
                ('end_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Конец')),
                ('duration', models.DurationField(blank=True, default=None, editable=False, null=True, verbose_name='Длительность')),
                ('region', models.CharField(max_length=30, verbose_name='Регион')),
                ('description', models.CharField(blank=True, default=None, null=True, verbose_name='Описание')),
                ('year', models.IntegerField(editable=False, verbose_name='Год')),
                ('month', models.IntegerField(editable=False, verbose_name='Месяц')),
                ('week', models.IntegerField(editable=False, verbose_name='Неделя')),
                ('year_week', models.CharField(editable=False, max_length=30, verbose_name='Неделя+Год')),
                ('effect_level', models.CharField(editable=False, max_length=30, verbose_name='Уровень + Эффект')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан в')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено в')),
                ('is_complete', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
